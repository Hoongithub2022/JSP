/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.67
 * Generated at: 2022-12-30 00:15:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._005fmember;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./_header.jsp", out, false);
      out.write("\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script src=\"/Kmarket/js/postcode.js\"></script>\r\n");
      out.write("<script src=\"/Kmarket/js/register.js\"></script>\r\n");
      out.write("        <main>\r\n");
      out.write("            <div class=\"registerForm\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <p>일반 회원가입</p>\r\n");
      out.write("                </div>\r\n");
      out.write("                <form action=\"/Kmarket/member/register.do\" method=\"post\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th colspan=\"2\">필수 정보입력</th>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td><span>*</span> 아이디</td>\r\n");
      out.write("                            <td><input type=\"text\" name=\"uid\" placeholder=\"아이디를 입력하세요.\">&nbsp;&nbsp;<p class=\"resultId\">영문,숫자로 이루어진 4~12자까지 설정해주세요.</p></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td><span>*</span> 비밀번호</td>\r\n");
      out.write("                            <td><input type=\"password\" name=\"pass1\" placeholder=\"비밀번호를 입력하세요.\">&nbsp;&nbsp;<p class=\"resultPw1\">영문,숫자,특수문자를 조합하여 8~12자리까지 설정해주세요.</p></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td><span>*</span> 비밀번호 확인</td>\r\n");
      out.write("                            <td><input type=\"password\" name=\"pass2\" placeholder=\"비밀번호를 한번 더 입력하세요.\">&nbsp;&nbsp;<p class=\"resultPw2\"></p></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </table>\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th colspan=\"2\">기본 정보입력</th>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td><span>*</span> 이름</td>\r\n");
      out.write("                            <td><input type=\"text\" name=\"name\" placeholder=\"이름을 입력하세요.\">&nbsp;&nbsp;<p class=\"resultName\"></p></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td><span>*</span> 성별</td>\r\n");
      out.write("                            <td>\r\n");
      out.write("	                            <label><input type=\"radio\" name=\"gender\" value=\"1\"> 남</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("	                            <label><input type=\"radio\" name=\"gender\" value=\"2\"> 여</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("	                            <label><input type=\"radio\" name=\"gender\" value=\"3\"> 선택안함</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("	                            <p class=\"resultGender\"></p>\r\n");
      out.write("                            </td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td><span>*</span> EMAIL</td>\r\n");
      out.write("                            <td><input type=\"text\" name=\"email\" placeholder=\"이메일을 입력하세요.\">&nbsp;&nbsp;<p class=\"resultEmail\"></p></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td><span>*</span> 휴대폰</td>\r\n");
      out.write("                            <td><input type=\"text\" name=\"hp\" placeholder=\"휴대폰을 입력하세요.\">&nbsp;&nbsp;<p class=\"resultHp\">- 포함 13자리를 입력하세요.</p></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td>주소</td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                                <input type=\"text\" class=\"addr\" name=\"zip\" id=\"zip\" placeholder=\"우편번호 입력 클릭\" style=\"cursor: pointer; outline:none;\"><br/>\r\n");
      out.write("                                <input type=\"text\" class=\"addr\" name=\"addr1\" id=\"addr1\" placeholder=\"주소를 검색하세요.\" readonly><br/>\r\n");
      out.write("                                <input type=\"text\" class=\"addr\" name=\"addr2\" id=\"addr2\" placeholder=\"상세주소를 입력하세요.\">\r\n");
      out.write("                            </td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </table>\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <button type=\"submit\" class=\"btnRegister\">회원가입</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </main>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./_footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
